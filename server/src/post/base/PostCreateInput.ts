/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { IsString, IsOptional, ValidateNested } from "class-validator";
import { ApiProperty } from "@nestjs/swagger";
import { Type } from "class-transformer";
import { TagCreateNestedManyWithoutPostsInput } from "./TagCreateNestedManyWithoutPostsInput";
import { CommentCreateNestedManyWithoutPostsInput } from "./CommentCreateNestedManyWithoutPostsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
@InputType()
class PostCreateInput {
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: String,
  })
  title?: string | null;

  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: String,
  })
  description?: string | null;

  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: String,
  })
  body?: string | null;

  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: String,
  })
  slug?: string | null;

  @ValidateNested()
  @Type(() => TagCreateNestedManyWithoutPostsInput)
  @IsOptional()
  @Field(() => TagCreateNestedManyWithoutPostsInput, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: () => TagCreateNestedManyWithoutPostsInput,
  })
  tags?: TagCreateNestedManyWithoutPostsInput;

  @ValidateNested()
  @Type(() => CommentCreateNestedManyWithoutPostsInput)
  @IsOptional()
  @Field(() => CommentCreateNestedManyWithoutPostsInput, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: () => CommentCreateNestedManyWithoutPostsInput,
  })
  comments?: CommentCreateNestedManyWithoutPostsInput;

  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  user?: UserWhereUniqueInput | null;
}
export { PostCreateInput };
